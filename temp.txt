    // "MIA": "<:MIA:582679356732735544>",
    // "MIL": "<:MIL:1035411364308590663>",
    // "MIN": "<:MIN:1035412626936713277>",
    // "GSW": "<:GSW:1035317676781871244>",

    "ADL": "<:ADL:628107427107307521>",
    "SLA": "<:SLA:628106759092961313>",
    "FRA": "<:FRA:628106420327284746>",
    "SDS": "<:SDS:628104574825136128>",
    "NZB": "<:NZB:628103800174936084>",
    "MAC": "<:MAC:628103076883988510>",
    "GUA": "<:GUA:628100663506632704>",
    "MEL": "<:MEL:628099454960140289>",

    else if (gameStatus === 2) {
                            
                            liveGameObject = liveGameObjects.find(liveGameInfo => liveGameInfo.gameId === gameID)
                            gameTimeLeft = `**Time Left:** ${liveGameObject.gameStatusText}`

                            const homeLeaderboard = await getLivePlayerLeadingStats(gameID, "homeTeam")
                            const awayLeaderboard = await getLivePlayerLeadingStats(gameID, "awayTeam")
                            const refereeNamesArray = await getOfficials(gameID)
                            const refereeNames = refereeNamesArray.join(', ')

                            scoresEmbed.addFields(
                                {
                                    name: `${teamEmojis[awayTeamTricode]} ${awayName} (${awaySeed}) @ ${teamEmojis[homeTeamTricode]} ${homeName} (${homeSeed}) | ${gameNumber} | ${broadcastEmoji} | Live :red_circle:`,
                                    value: `${gameTimeLeft} | ${gameScore} | ${arenaDetails} | **${seriesText}**
                                            **Referees:** ${refereeNames}`, 
                                }
                            )

                            scoresEmbed.addFields(
                                {
                                    name: "---------------------------Player Stats Leader Board---------------------------",
                                    value: `**Pts:** ${homeLeaderboard.pts_leader.name} (${homeLeaderboard.pts_leader.points}) | **Rebs:** ${homeLeaderboard.rebs_leader.name} (${homeLeaderboard.rebs_leader.rebounds}) | **Asts:** ${homeLeaderboard.asts_leader.name} (${homeLeaderboard.asts_leader.assists})
                                            **Pts:** ${awayLeaderboard.pts_leader.name} (${awayLeaderboard.pts_leader.points}) | **Rebs:** ${awayLeaderboard.rebs_leader.name} (${awayLeaderboard.rebs_leader.rebounds}) | **Asts:** ${awayLeaderboard.asts_leader.name} (${awayLeaderboard.asts_leader.assists})`
                                }
                            )

                        } else { 
                            scoresEmbed.addFields(
                                {
                                    name: `${teamEmojis[awayTeamTricode]} ${awayName} (${awaySeed}) @ ${teamEmojis[homeTeamTricode]} ${homeName} (${homeSeed}) | ${gameNumber} | ${broadcastEmoji} | ${gameStatusText}`,
                                    value: `${gameScore} | ${arenaDetails} | **${seriesText}**`, 
                                }
                            )
                        }